class Solution:
    def cloneLinkedList(self, head):
        if not head : return None 

        curr = head 
        while curr:
            temp = Node(curr.data)
            temp.next = curr.next 
            curr.next = temp 
            curr = temp.next 

        curr = head 
        while curr and curr.next:
            curr.next.random = curr.random.next if curr.random else None 
            curr = curr.next.next
        
        newCurr = dummy = Node(-1)
        curr = head 
        while curr:
            temp = curr.next 
            curr.next = temp.next 
            newCurr.next = temp
            newCurr = newCurr.next 
            curr = curr.next 
         
        return dummy.next



''' time complexity : O(3n)        
    space complexity : O(1)


    1. copy nodes in between 
    2. connect random pointers
    3. connect next pointers 
'''        
