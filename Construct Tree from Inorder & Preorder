

class Solution:
    def buildTree(self, inorder, preorder):
        if not inorder or not preorder:
            return None
        
        inorder_index_map = {val: idx for idx, val in enumerate(inorder)}
        self.pre_idx = 0
        
        def constructTree(left, right):
            if left > right:
                return None
            
            root_val = preorder[self.pre_idx]
            self.pre_idx += 1
            root = Node(root_val)
            
            root.left = constructTree(left, inorder_index_map[root_val] - 1)
            root.right = constructTree(inorder_index_map[root_val] + 1, right)
            
            return root
        
        return constructTree(0, len(inorder) - 1)
