class Solution:
    def distCandy(self, root):
        # Helper function returns (moves, excess_candies)
        def dfs(node):
            if not node:
                return (0, 0)
            
            left_moves, left_excess = dfs(node.left)
            right_moves, right_excess = dfs(node.right)
            
            # Excess candies at current node: positive means extra candies, negative means needs candies
            excess = node.data + left_excess + right_excess - 1
            
            # Moves needed at this node are the absolute moves to/from children
            moves = left_moves + right_moves + abs(excess)
            
            return (moves, excess)
        
        total_moves, _ = dfs(root)
        return total_moves
