import sys
sys.setrecursionlimit(10**8)
from collections import deque

class Solution:
    def numIslands(self, grid):
        N, M = len(grid), len(grid[0])
        visited = [[0] * M for _ in range(N)]
        directions = [(-1, -1), (-1, 0), (-1, 1), (0, 1), (1, 1), (1, 0), (1, -1), (0, -1)]
        
        def bfs(r, c):
            queue = deque([(r, c)])
            visited[r][c] = 1
            while queue:
                x, y = queue.popleft()
                for dx, dy in directions:
                    nx, ny = x + dx, y + dy
                    if 0 <= nx < N and 0 <= ny < M and grid[nx][ny] == 1 and not visited[nx][ny]:
                        visited[nx][ny] = 1
                        queue.append((nx, ny))


        res = 0
        for i in range(N):
            for j in range(M):
                if grid[i][j] == 1 and not visited[i][j]:
                    res += 1
                    bfs(i, j)
        return res
