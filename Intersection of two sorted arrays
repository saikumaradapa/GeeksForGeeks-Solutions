Problem Link : https://www.geeksforgeeks.org/problems/intersection-of-two-sorted-array-1587115620/1

class Solution:
    #Function to return a list containing the intersection of two arrays.
    def intersection(self, arr1, arr2):
        result = []
        
        i, j = 0, 0
        n, m = len(arr1), len(arr2)
        
        while i < n and j < m:
            if arr1[i] < arr2[j]:
                i += 1
            elif arr1[i] > arr2[j]:
                j += 1
            else:
                if not result or result[-1] != arr1[i]:
                    result.append(arr1[i])
                i += 1
                j += 1
        return result
        
''' time complexity : O(n + m)
    space complexity : O(1)
'''    


##################################################################################################################################################################################################################


class Solution:
    #Function to return a list containing the intersection of two arrays.
    def intersection(self, arr1, arr2):
        seen = set(arr1)
        
        result = []
        for n in arr2:
            if n in seen:
                result.append(n)
                seen.remove(n)
        return result
        
''' time complexity : O(n + m)
    space complexity : O(n)

    The membership test 'if n in seen' takes ùëÇ(1) on average due to the hash table implementation of sets.
'''                    
