class Solution:
    def ratInMaze(self, maze):
        n = len(maze)
        paths = []
        visited = [[False for _ in range(n)] for _ in range(n)]
        directions = [('D', 1, 0), ('L', 0, -1), ('R', 0, 1), ('U', -1, 0)]

        def is_safe(x, y):
            return 0 <= x < n and 0 <= y < n and maze[x][y] == 1 and not visited[x][y]

        def backtrack(x, y, path):
            if x == n - 1 and y == n - 1:
                paths.append(path)
                return
            for dir_char, dx, dy in directions:
                nx, ny = x + dx, y + dy
                if is_safe(nx, ny):
                    visited[nx][ny] = True
                    backtrack(nx, ny, path + dir_char)
                    visited[nx][ny] = False

        if maze[0][0] == 1:
            visited[0][0] = True
            backtrack(0, 0, "")
        return sorted(paths)
