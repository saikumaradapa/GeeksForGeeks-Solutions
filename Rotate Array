problem Link : https://www.geeksforgeeks.org/problems/rotate-array-by-n-elements-1587115621/1


#############################################################################################################################################################################################
# Optimal solution 

class Solution:
    def rotateArr(self, arr, d):
        n = len(arr) 
        d = d % n 
        
        i, j = 0, d-1
        while i < j:
            arr[i], arr[j] = arr[j], arr[i]
            i, j = i+1, j-1
            
        i, j = d, n-1
        while i < j:
            arr[i], arr[j] = arr[j], arr[i]            
            i, j = i+1, j-1
        
        i, j = 0, n-1
        while i < j:
            arr[i], arr[j] = arr[j], arr[i]        
            i, j = i+1, j-1
    
        return arr
        
''' time complexity : O(n)
    space complexity : O(1)
'''    

#############################################################################################################################################################################################
# Better Approach 

class Solution:
    def rotateArr(self, arr, d):
        n = len(arr) 
        d = d % n 
        
        for i in range(d):
            temp = arr[0]
            for j in range(1, n):
                arr[j-1] = arr[j]
            arr[-1] = temp 
        return arr
        
''' time complexity : O(d * n)
    space complexity : O(1)
'''     

